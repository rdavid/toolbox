#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# Copyright 2020-2024 David Rabkin
# Detects if a device with a certain MAC address is in the local network.
# shellcheck disable=SC1091,SC2034 # File not following, variable unused.
readonly \
	BASE_APP_VERSION=0.9.20240208 \
	BASE_MIN_VERSION=0.9.20231212
. base.sh
MAXV=10
MINV=1
MIDL=$(((MAXV - MINV + 1) / 2))
readonly \
	MAXV \
	MIDL \
	MINV \
	SCAN=arp-scan\ --localnet\ --interface=wlan0
CNTR=$MIDL
NAME=''
ADDR=''

is_mac() {
	echo "$1" |
		grep -E '^([0-9a-f]{2}:){5}[0-9a-f]{2}$' >/dev/null ||
		die MAC address "$1" is invalid.
}

report() {
	if [ $CNTR -gt $MIDL ]; then
		log "Master $NAME $ADDR is home: $CNTR!"
	else
		log "Master $MACA is not home: $CNTR."
	fi
}

scan() {
	line=$($SCAN | grep "$MACA" | head -1) || :
	if [ -n "$line" ]; then
		[ -z "$NAME" ] && NAME=$(printf '%s' "$line" | cut -f1)
		[ -z "$ADDR" ] && ADDR=$(printf '%s' "$line" | cut -f3 | xargs -0)

		# Each success has much more value than a failure.
		CNTR=$MAXV
	else
		if [ $CNTR -ne $MINV ]; then
			CNTR=$((CNTR - 1))
		fi
	fi
}

wait() {
	sleep 1
}

# Starting point.
beroot
validate_cmd arp-scan
[ "$#" -eq 1 ] || cya "Usage: $BASE_IAM [MAC-ADDRESS:list]"
[ "$1" = list ] && {
	$SCAN
	cya
}
is_mac "$1"
MACA="$1"
while :; do
	scan
	report
	wait
done
