#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# Copyright 2022-2023 David Rabkin
# Reports external IP in a loop.
# The script uses local variables which are not POSIX but supported by most
# shells, see more:
#  https://stackoverflow.com/questions/18597697/posix-compliant-way-to-scope-variables-to-a-function-in-a-shell-script
# shellcheck disable=SC3043 # Uses local variables.
# shellcheck disable=SC1091,SC2034 # File not following, appears unused.
readonly BASE_APP_VERSION=0.9.20230422
. base.sh

# The index starts with 0, it guarantees the title printing from the begging.
main() {
	validate_cmd awk dig whois
	local i=0
	while :; do
		[ $((i % 24)) -eq 0 ] && title
		myip
		sleep 5
		i=$((i + 1))
	done
}

# Prints external IP.
myip() {
	local ip out state
	ip="$(
		dig \
			-4 \
			+short \
			myip.opendns.com \
			@resolver4.opendns.com \
			2>&1
	)" || {
		loge OpenDNS failed: "$ip"
		return 0
	}
	var_exists ip >/dev/null || {
		ip="$(
			dig \
				-4 \
				-t txt \
				+short \
				o-o.myaddr.l.google.com \
				@ns1.google.com \
				2>&1
		)" || {
			loge Google DNS failed: "$ip"
			return 0
		}
		ip="$(printf %s "$ip" | awk -F\" '{print $2}')"
		var_exists ip >/dev/null || {
			loge OpenDNS and Google DNS failed to resolve my IP
			return 0
		}
	}
	out="$(whois "$ip" 2>&1)" || {
		loge whois "$ip" failed: "$out"
		return 0
	}

	# At first tries to find a state of a country.
	state="$(
		printf %s "$out" |
			awk -F':[ \t]+' 'tolower($1) ~ /^stateprov$/ {print toupper($2)}' |
			head -1
	)"
	var_exists state >/dev/null || {
		state="$(
			printf %s "$out" |
				awk -F':[ \t]+' 'tolower($1) ~ /^country$/ {print toupper($2)}' |
				head -1
		)"
		var_exists state >/dev/null ||
			state=NO
	}
	log "$(printf %15s "$ip") |   $state  |"
}

# Prints top title.
title() {
	log "       IP       | State | since $(base_duration "$BASE_BEG")"
}

# Starting point.
main "$@"
