#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# Copyright 2022-2023 David Rabkin
# The script uses local variables which are not POSIX but supported by most
# shells, see more:
#  https://stackoverflow.com/questions/18597697/posix-compliant-way-to-scope-variables-to-a-function-in-a-shell-script
# shellcheck disable=SC3043 # Uses local variables.
# shellcheck disable=SC1091,SC2034 # File not following, appears unused.
BASE_APP_USAGE="$(
	cat <<-EOM 2>&1
		  -a, --action      Replaces copyright years in files if needed.
		  -o, --owner       A string for an owner, e.g. -o 'David Rabkin'.
	EOM
)" || {
	local err=$?
	printf >&2 %s\\n "$BASE_APP_USAGE"
	exit $err
}
readonly \
	BASE_APP_USAGE \
	BASE_APP_VERSION=0.9.20230707 \
	BASE_MIN_VERSION=0.9.20230405
. base.sh

# Analyzes input files, fixes copyright years if needed.
fix_outdated() {
	local arg copyrighted modified
	for arg; do
		modified="$(git log -1 --pretty=format:'%aD' "$arg" | cut -d \  -f 4)"
		copyrighted="$(
			grep -E "$PATTERN" <"$arg" |
				grep -Eo '[0-9]{4}' |
				tail -n 1
		)"
		[ "$modified" != "$copyrighted" ] || {
			log "$arg: copyrighted $copyrighted."
			continue
		}
		if [ "$ACTION" = true ]; then
			sed -i '' \
				"s/^\(.*\)-$copyrighted\(.*\)$OWNER/\1-$modified\2$OWNER/g" \
				"$arg"
			sed -i '' \
				"s/^\(.*\)$copyrighted\(.*\)$OWNER/\1$copyrighted-$modified\2$OWNER/g" \
				"$arg"
			log "$arg: copyrighted $copyrighted, modified $modified, fixed."
		else
			logw "$arg: copyrighted $copyrighted, modified $modified."
		fi
	done
}

# Looks for git files in current directory.
main() {
	validate "$@"
	local files
	files="$(
		git ls-files . 2>&1 |
			xargs grep -E "$PATTERN" /dev/null |
			cut -d : -f 1 |
			sort -V |
			uniq |
			xargs
	)" || die Git failed: "$files"

	# shellcheck disable=SC2086 # No need for double quates.
	fix_outdated $files
}

# Validates the environment.
validate() {
	validate_cmd git
	local arg
	for arg; do
		shift
		case "$arg" in
		-a | --action)
			ACTION=true
			;;
		-o | --owner)
			set +o nounset
			[ -n "$1" ] || die --owner requires a non-empty argument.
			set -o nounset
			OWNER="$1"
			;;
		esac
	done
	var_exists ACTION || ACTION=false
	var_exists OWNER || OWNER=David\ Rabkin
	PATTERN='Copyright .* '$OWNER
	readonly \
		ACTION \
		PATTERN \
		OWNER
}

# Starting point.
main "$@"
