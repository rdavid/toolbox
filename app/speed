#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# SPDX-FileCopyrightText: 2020-2025 David Rabkin
# SPDX-License-Identifier: 0BSD
#
# The script uses local variables which are not POSIX but supported by most
# shells. See:
#  https://stackoverflow.com/q/18597697
# shellcheck disable=SC3043 # Uses local variables.
# shellcheck disable=SC1091,SC2034 # File not following, appears unused.
set -- "$@" --quiet
readonly \
	BASE_APP_VERSION=0.9.20250609 \
	BASE_MIN_VERSION=0.9.20230505
. base.sh

# Reports download and upload internet speeds in a loop.
main() {
	validate_cmd gawk speedtest-cli

	# The index starts with 0, it guarantees the title printing from the begging.
	local i=0
	while :; do
		[ $((i % 30)) -eq 0 ] && title
		test_speed
		sleep 30
		i=$((i + 1))
	done
}

# Prints current download and upload speeds. The function is ran in a loop,
# rests in case of an error.
test_speed() {
	url_exists google.com || {
		loge Check internet connection.
		return 0
	}
	local down host out up
	out="$(speedtest-cli 2>&1)" || {
		loge "$out"
		return 0
	}
	down="$(printf %s "$out" | grep -E '^Download: ' | gawk '{print $2}')" || {
		loge "$out: $down: down."
		return 0
	}
	up="$(printf %s "$out" | grep -E '^Upload: ' | gawk '{print $2}')" || {
		loge "$out: $up: up."
		return 0
	}
	host="$(printf %s "$out" | grep -E '^Hosted by ' | cut -c11-)" || {
		loge "$out: $host: host."
		return 0
	}
	tsout "| $(printf %6s "$down") | $(printf %6s "$up") | $host"
}

# Prints top title.
title() {
	cat <<-EOM
		------------------+--------+------- +----------------
		    Timestamp     |  Down  |   Up   |    Host By
		------------------+--------+------- +----------------
	EOM
}

# Starting point.
main "$@"
