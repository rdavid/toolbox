#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# Copyright 2022-2023 David Rabkin
# The script uses local variables which are not POSIX but supported by most
# shells, see more:
#  https://stackoverflow.com/questions/18597697/posix-compliant-way-to-scope-variables-to-a-function-in-a-shell-script
# shellcheck disable=SC3043,SC2034 # Uses local variables, appears unused.
readonly \
	BASE_APP_VERSION=0.9.20230405 \
	BASE_MIN_VERSION=0.9.20230312 \
	DST=/usr/local/bin \
	REL=0.9.20230405 \
	TGT=/usr/local/bin/base.sh
readonly \
	SRC=https://github.com/rdavid/shellbase/archive/refs/tags/v$REL.tar.gz

# Installs shellbase.
install() {
	curl --location --silent $SRC |
		tar \
			--directory $DST \
			--extract \
			--gzip \
			--strip-components=2 \
			shellbase-$REL/lib/base.sh ||
		die Unable to install shellbase to $DST.
	printf \
		'%s is installed to %s.\n' \
		"$(sh $TGT --quiet --version)" \
		$DST
}

# Validates the environment and installs shellbase.
main() {
	validate
	install
}

# Uses Unix shell framework shellbase:
#  https://github.com/rdavid/shellbase/
shellbase() {
	eval "$(
		curl --location --silent $SRC |
			tar \
				--extract \
				--gzip \
				--to-stdout \
				shellbase-$REL/lib/base.sh
	)"
	[ -n "${BASE_VERSION+x}" ] || {
		printf >&2 No\ shellbase.\\n
		exit 14
	}
}

# Certain packages should be installed.
validate() {
	local pkg
	for pkg in curl tar; do
		command -v $pkg >/dev/null 2>&1 || {
			printf >&2 Install\ %s.\\n $pkg
			exit 12
		}
	done
	curl --fail --head --output /dev/null --silent $SRC || {
		printf >&2 '%s is unavailable.\n' $SRC
		exit 13
	}
	shellbase
	iswritable $DST || die $DST is not writable.
	file_exists $TGT &&
		yes_to_continue \
			"$(sh $TGT --quiet --version)" \
			is installed. Install \
			"$BASE_VERSION"?
}

# Starting point.
main "$@"
