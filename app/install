#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# Copyright 2022-2023 David Rabkin
# Uses Unix shell framework shellbase:
#  https://github.com/rdavid/shellbase/
# The script uses local variables which are not POSIX but supported by most
# shells, see more:
#  https://stackoverflow.com/questions/18597697/posix-compliant-way-to-scope-variables-to-a-function-in-a-shell-script
# shellcheck disable=SC3043,SC2034 # Uses local variables, appears unused.
readonly \
	BASE_APP_VERSION=0.9.20231010 \
	BASE_MIN_VERSION=0.9.20230505 \
	DST=/usr/local/bin \
	REL=0.9.20231010 \
	TGT=/usr/local/bin/base.sh
readonly \
	SRC=https://github.com/rdavid/shellbase/archive/refs/tags/v$REL.tar.gz

# Installs shellbase to the destination.
install() {
	curl --location --silent $SRC |
		tar \
			--directory $DST \
			--extract \
			--gzip \
			--strip-components=2 \
			shellbase-$REL/lib/base.sh ||
		die Unable to install shellbase to $DST.
}

# Validates the environment and installs shellbase.
main() {
	local \
		msg \
		new="shellbase $REL" \
		old
	validate "$@"
	if file_exists $TGT >/dev/null 2>&1; then
		old="$(sh $TGT --quiet --version 2>&1)" || die "$old"
		[ "$old" = "$new" ] &&
			msg="$new is already installed in $DST. Continue anyway?" ||
			msg="$old is installed in $DST. Update to $new?"
		yes_to_continue "$msg"
		install
		printf '%s is updated to %s in %s.\n' "$old" "$new" $DST
	else
		install
		printf '%s is installed in %s.\n' "$new" $DST
	fi
}

# Installs shellbase to the current shell session. Packages curl and tar are
# required.
shellbase() {
	local err pkg
	for pkg in curl tar; do
		command -v $pkg >/dev/null 2>&1 || {
			err=$?
			printf >&2 Install\ %s.\\n $pkg
			exit $err
		}
	done
	curl --fail --head --output /dev/null --silent $SRC || {
		err=$?
		printf >&2 '%s is unavailable.\n' $SRC
		exit $err
	}
	eval "$(
		curl --location --silent $SRC |
			tar --extract --gzip --to-stdout shellbase-$REL/lib/base.sh
	)"
	[ -n "${BASE_VERSION+x}" ] || {
		printf >&2 No\ shellbase.\\n
		exit 1
	}
	log shellbase "$BASE_VERSION" is installed to the current shell session.
}

# Uses functions of shellbase to validate the environment.
# shellcheck disable=SC1090,SC2015 # File not following, A && B || C.
validate() {
	set -- "$@" --quiet
	[ -r $TGT ] && . $TGT || shellbase
	validate_cmd curl tar
	iswritable $DST || die $DST is not writable.
	url_exists $SRC || die
}

# Starting point.
main "$@"
